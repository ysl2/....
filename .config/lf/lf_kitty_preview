#!/usr/bin/env bash
# Ref:
# https://www.reddit.com/r/KittyTerminal/comments/132n4p5/any_lf_file_manager_users_how_to_preview_pdfs_as/
# https://github.com/rafi/.config/blob/master/lf/preview

# NOTE:
# For lf,
# `exit 1` means lf will not cache the preview result, and will run the cleaner script. Kitty need to exit 1 to solve the picture still remains after preview.
# `exit 0` means lf will cache the preview result and will acclerate the next time preview for same file. If not previewed by kitty, we can exit 0.

FILE="$(realpath "$1")"
W=$2
H=$3
X=$4
Y=$5

TMPFILENAME=$(basename "$(echo "$FILE" | tr ' ' '__' | tr '.' '_')")
# FILE_EXTENSION="${FILE##*.}"
# FILE_EXTENSION_LOWER="$(printf "%s" "${FILE_EXTENSION}" | tr '[:upper:]' '[:lower:]')"
MIMETYPE="$( file --dereference --brief --mime-type -- "$FILE" )"


function kitty_icat() {
    function ascii () {
        chafa -f symbols -s "$W"x"$H" "$1"
    }

    # For Remote: use ascii.
    if [[ -n "$SSH_TTY" ]]; then
        ascii "$1"
        exit 0
    fi
    # For local:
    # 1. If in kitty, use kitty.
    if [[ -n "$KITTY_WINDOW_ID" ]]; then
        flag=$(ps -p "$KITTY_PID" | grep "$KITTY_PID")
        if [[ -n "$flag" ]]; then
            kitty +kitten icat --silent --stdin no --transfer-mode file --place "${W}x${H}@${X}x${Y}" "$1" < /dev/null > /dev/tty
            exit 1
        fi
    fi
    # 2. If not in tmux, use sixel.
    if [[ -z "$TMUX" ]]; then
        chafa -f sixels -s "$W"x"$H" "$1"
        exit 0
    fi
    # 3. If (not in kitty) and (in tmux), use ascii.
    ascii "$1"
    exit 0

    # # If: not in tmux, and not in server, and is in kitty, use kitty icat.
    # # if [[ -z "$TMUX" ]] && [[ -z "$SSH_TTY" ]] && [[ "$TERM" == 'xterm-kitty' ]]; then
    #
    # # If in kitty, use kitty.
    # # tmux will set $TERM to xterm-256color, so check kitty first.
    # # If $TERM is kitty, that means must no tmux.
    # # Else, that might be in tmux, need further check.
    # if [[ "$TERM" == 'xterm-kitty' ]]; then
    #     # If not in remote, use file. else, use stream.
    #     # Ref: --transfer-mode
    #     # https://sw.kovidgoyal.net/kitty/kittens/icat/#cmdoption-kitty-kitten-icat-transfer-mode
    #     #
    #     # NOTE:
    #     # Must exit 1, for lf running cleaner after the picture shows.
    #     # If exit 0, lf will not clean the picture after preview.
    #
    #     if [[ -z "$SSH_TTY" ]]; then
    #         transfermode='file'
    #     else
    #         transfermode='stream' # NOTE: Only when no tmux, this will be executed.
    #     fi
    #     kitty +kitten icat --silent --stdin no --transfer-mode "$transfermode" --place "${W}x${H}@${X}x${Y}" "$1" < /dev/null > /dev/tty
    #     # Remote machine might not have kitty, so check return value first.
    #     # If success, exit 1. Else, keep going.
    #     if [ $? -eq 0 ]; then
    #         exit 1
    #     fi
    # fi
    #
    # local resolution=$(file "$1" | grep -oP '\d+\s*x\s*\d+')
    # read -r width height <<< "$(echo "$resolution" | awk -Fx '{print $1, $2}')"
    #
    # # If not in tmux, use sixel
    # if [[ -z "$TMUX" ]]; then
    #     # chafa -f sixels "$1"
    #     chafa -f sixels -s "$W"x"$H" "$1"
    #     if [ $? -eq 0 ]; then
    #         exit 0
    #     fi
    #     # If chafa fails, use img2sixel for fallback.
    #     if [ "$width" -lt "$height" ]; then
    #         # The shape is too small, so add zero for multiple ten.
    #         img2sixel -h "$H"0 "$1"
    #     else
    #         img2sixel -w "$W"0 "$1"
    #     fi
    #     if [ $? -eq 0 ]; then
    #         exit 0
    #     fi
    # fi
    #
    # # If in tmux, use ascii
    # if [ "$width" -lt "$height" ]; then
    #     viu -sb -h "$H" "$1"
    # else
    #     viu -sb -w "$W" "$1"
    # fi
    # if [ $? -eq 0 ]; then
    #     exit 0
    # fi
    # chafa -s "$W"x"$H" "$1" || \
    #     timg -E -g"$W"x"$H" "$1" || \
    #     catimg -r 2 -H "$H" "$1" || \
    #     imgcat --depth=256 --width "$W" "$1"
    # exit 0
}


function handle_extension() {
    function check_sixel () {
        if [[ -n "$TMUX" ]]; then
            echo "tmux doesn't support sixel protocol."
            exit 0
        fi
        if [[ "$TERM" == 'xterm-kitty' ]]; then
            echo "kitty terminal doesn't support sixel protocol."
            exit 0
        fi
    }

    case "$FILE" in
        *.nii | *.nii.gz)
            check_sixel
            # pip install niicat
            # sudo apt install libsixel-bin
            niicat "$FILE" -lb
            exit 0
            ;;
        *.six | *.sixel)
            check_sixel
            cat "$FILE"
            exit 0
            ;;
    esac
    # WARNING: Do not add any exit value here!
}


function handle_mime() {
    case "$MIMETYPE" in
        image/*)
            kitty_icat "$FILE"
            ;;
        *pdf)
            if [[ ! -f "/tmp/$TMPFILENAME.png" ]]; then
                pdftoppm -f 1 -l 1 -png "$FILE" > "/tmp/$TMPFILENAME.png"
            fi
            kitty_icat "/tmp/$TMPFILENAME.png"
            ;;
        audio/*)
            if [[ ! -f "/tmp/$TMPFILENAME.png" ]]; then
                ffmpeg -i "$FILE" -filter_complex "showwavespic=s=640x480" -frames:v 1 "/tmp/$TMPFILENAME.png"
            fi
            kitty_icat "/tmp/$TMPFILENAME.png"
            ;;
        video/*)
            if [[ ! -f "/tmp/$TMPFILENAME.png" ]]; then
                ffmpeg -i "$FILE" -vf "thumbnail" -frames:v 1 "/tmp/$TMPFILENAME.png"
            fi
            kitty_icat "/tmp/$TMPFILENAME.png"
            ;;
        *zip | *tar | *rar | *x-xz)
            # sudo apt install atool
            als "$FILE" | awk '{print $NF}'
            exit 0
            ;;
        *)
            cat "$FILE"
            exit 0
            ;;
    esac
    # WARNING: Do not add any exit value here!
}


function main() {
    handle_extension
    handle_mime
}


main "$@"
